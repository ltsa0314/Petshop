// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetShop.Infraestructure.Data.Contexts;

namespace PetShop.Infraestructure.Data.Migrations.SqlServer
{
    [DbContext(typeof(PetShopSqlServerContext))]
    [Migration("20220210024338_v1.2")]
    partial class v12
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PetShop.Domain.Aggregates.OrderAggregate.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Ordenes");
                });

            modelBuilder.Entity("PetShop.Domain.Aggregates.OrderAggregate.OrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrdenItems");
                });

            modelBuilder.Entity("PetShop.Domain.Aggregates.ProductAggregate.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Code = "Lata",
                            Description = "Alimento prescrito de presentación húmeda que ayuda a la regulación de la microbiota intestinal, mejorando la salud digestiva ante enfermedades fibro-responsivas.\r\n                                Su tecnología ActivBome+ favorece la salud y bienestar del tracto digestivo al nutrir el microbioma intestinal.\r\n                                Contiene altos niveles de ácidos grasos omega 3 (EPA y DHA) que ayudan a reducir los procesos inflamatorios derivados de la enfermedad intestinal.\r\n                                Ha demostrado clínicamente que ayuda a reducir las heces líquidas en 24 horas.",
                            Image = "https://www.gabrica.co/wp-content/uploads/2020/05/11001097-hills-prescription-diet-lata-GastroBiome.png",
                            Name = "Hill’s Prescription Diet Lata GastroBiome",
                            Price = 12000m
                        },
                        new
                        {
                            Id = 2L,
                            Code = "Synergy",
                            Description = "Indicado para ayudar la salud e higiene bucal en los perros dejando máxima blancura en los dientes.\r\n                                – Sin alcohol, sin azúcar, sin detergentes y sin sabores picantes de menta.\r\n                                – La fórmula se activa al contacto con la placa bacteriana y los gérmenes en la cavidad oral, eliminando bacterias y el mal olor causado por ellas.\r\n                                – Protege las encías y ayuda a prevenir y tratar la gingivitis.",
                            Image = "https://www.gabrica.co/wp-content/uploads/2019/04/DENTAL-FRESH-Advanced-Whitening-Perros.png",
                            Name = "Dental Fresh Advanced Whitening Perros",
                            Price = 25000m
                        });
                });

            modelBuilder.Entity("PetShop.Domain.Aggregates.UserAggregate.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            FullName = "Leidy Tatina",
                            Password = "123456",
                            Type = 0,
                            UserName = "leidy"
                        },
                        new
                        {
                            Id = 2L,
                            FullName = "Pepito Perez",
                            Password = "123456",
                            Type = 1,
                            UserName = "pepito"
                        });
                });

            modelBuilder.Entity("PetShop.Domain.Aggregates.OrderAggregate.Order", b =>
                {
                    b.HasOne("PetShop.Domain.Aggregates.UserAggregate.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PetShop.Domain.Aggregates.OrderAggregate.OrderItem", b =>
                {
                    b.HasOne("PetShop.Domain.Aggregates.OrderAggregate.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PetShop.Domain.Aggregates.ProductAggregate.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PetShop.Domain.Aggregates.OrderAggregate.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("PetShop.Domain.Aggregates.ProductAggregate.Product", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("PetShop.Domain.Aggregates.UserAggregate.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
